group = 'se.mtm.gradle'

apply plugin: 'groovy'
apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "com.jfrog.artifactory"

dependencies {
    compile 'org.glassfish.jersey.core:jersey-client:2.16'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
    compile 'commons-codec:commons-codec:1.10'
    compile 'commons-io:commons-io:2.4'

    compile gradleApi()

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.+"
}

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        url "http://artifactory.mtm.se:8081/artifactory/repo"
    }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = "${artifactory_upload_repo}"
            username = "${mavenCredentialUsr}"
            password = "${mavenCredentialPwd}"
            maven = true
        }
    }
    resolve {
        repository {
            repoKey = "${artifactory_resolve_repo}"
            maven = true
        }
    }
}

publishing {
    publications {
        mavenDependencyList(MavenPublication) {
            groupId group
            artifactId "gradle-artifactory-rpm-plugin"
            version "${version}"

            from components.java
            fixDependencyScope(pom)
        }
    }
}

artifactoryPublish {
    publications(publishing.publications.mavenDependencyList)
}

artifactoryPublish.dependsOn(build)

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

buildscript {
    repositories { maven { url 'http://repo.jfrog.org/artifactory/libs-release/' } }
    dependencies { classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.1') }
}

void fixDependencyScope(pom) {
    pom.withXml {
        asNode().dependencies.'*'.findAll() {
            it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                dep.name == it.artifactId.text()
            }
        }.each() {
            it.scope*.value = 'compile'
        }
    }
}
